NAME=ELF: riscv64: entrypoint
FILE=../bins/elf/analysis/guess-number-riscv64
CMDS=ie
CMDS=is
EXPECT=<<EOF
[Entrypoints]
vaddr=0x00010000 paddr=0x00001000 haddr=0x00000018 hvaddr=0x00010018 type=program

1 entrypoints
EOF
RUN

NAME=ELF: riscv64: symbols
FILE=../bins/elf/analysis/guess-number-riscv64
EXPECT=<<EOF
EOF
RUN

NAME=ELF: riscv64: file format
FILE=../bins/elf/analysis/guess-number-riscv64
CMDS=if
EXPECT=<<EOF
fd       3
file     ../bins/elf/analysis/guess-number-riscv64
size     0x9d5a8
humansz  629.4K
mode     r-x
format   elf64
iorw     false
blksz    0x0
block    0x100
type     EXEC (Executable file)
arch     riscv
baddr    0x10000
binsz    643108
bintype  elf
bits     64
canary   false
class    ELF64
compiler GCC: (GNU) 5.2.0
crypto   false
endian   little
havecode true
laddr    0x0
lang     c
linenum  true
lsyms    true
machine  RISC V
nx       false
os       linux
pic      false
relocs   true
rpath    NONE
sanitiz  false
static   true
stripped false
subsys   linux
va       true
EOF
RUN

NAME=ELF: riscv64: main analysis
FILE=../bins/elf/analysis/guess-number-riscv64
CMDS=e asm.calls=false;s sym.main;af;pdf
EXPECT=<<EOF
/ (fcn) main 140
// int main (int64_t arg_18h, int64_t arg_0h);
|           ; arg int64_t arg_18h @ s0+0x18
|           ; arg int64_t arg_0h @ sp+0x20
|           0x00010150      130101fe       addi sp, sp, -32
|           0x00010154      233c1100       sd ra, 24(sp)
|           0x00010158      23388100       sd s0, 16(sp)
|           0x0001015c      13040102       addi s0, sp, 32
|           0x00010160      9307b007       li a5, 123
|           0x00010164      2326f4fe       sw a5, -20(s0)
|           0x00010168      9307f0ff       li a5, -1
|           0x0001016c      2324f4fe       sw a5, -24(s0)
|           0x00010170      b7170200       lui a5, 0x21
|           0x00010174      1385874f       addi a0, a5, 1272
|           0x00010178      ef00c01f       jal ra, sym.printf
|           0x0001017c      930784fe       addi a5, s0, -24
|           0x00010180      93850700       mv a1, a5
|           0x00010184      b7170200       lui a5, 0x21
|           0x00010188      13850751       addi a0, a5, 1296
|           0x0001018c      ef00402f       jal ra, sym.scanf
|           0x00010190      032784fe       lw a4, -24(s0)
|           0x00010194      8327c4fe       lw a5, -20(s0)
|       ,=< 0x00010198      631cf700       bne a4, a5, 0x101b0
|       |   0x0001019c      b7170200       lui a5, 0x21
|       |   0x000101a0      13858751       addi a0, a5, 1304
|       |   0x000101a4      ef00002d       jal ra, sym.puts
|       |   0x000101a8      93070000       li a5, 0
|       |   0x000101ac      6f000003       j 0x101dc
|       `-> 0x000101b0      032784fe       lw a4, -24(s0)
|           0x000101b4      8327c4fe       lw a5, -20(s0)
|       ,=< 0x000101b8      635af700       ble a5, a4, 0x101cc
|       |   0x000101bc      b7170200       lui a5, 0x21
|       |   0x000101c0      13858752       addi a0, a5, 1320
|       |   0x000101c4      ef00002b       jal ra, sym.puts
|       |   0x000101c8      6ff09ffa       j 0x10170
|       `-> 0x000101cc      b7170200       lui a5, 0x21
|           0x000101d0      13858753       addi a0, a5, 1336
|           0x000101d4      ef00002a       jal ra, sym.puts
\           0x000101d8      6ff09ff9       j 0x10170
EOF
RUN

NAME=ELF: riscv64: full analysis
FILE=../bins/elf/analysis/guess-number-riscv64
ARGS=-A
CMDS=e asm.calls=false;s sym.main;pdf
EXPECT=<<EOF
            ; CALL XREF from entry0 @ 0x10040
/ (fcn) main 140
// int main (int64_t arg_18h, int64_t arg_0h);
|           ; arg int64_t arg_18h @ s0+0x18
|           ; arg int64_t arg_0h @ sp+0x20
|           0x00010150      130101fe       addi sp, sp, -32
|           0x00010154      233c1100       sd ra, 24(sp)
|           0x00010158      23388100       sd s0, 16(sp)
|           0x0001015c      13040102       addi s0, sp, 32
|           0x00010160      9307b007       li a5, 123
|           0x00010164      2326f4fe       sw a5, -20(s0)
|           0x00010168      9307f0ff       li a5, -1
|           0x0001016c      2324f4fe       sw a5, -24(s0)
|           0x00010170      b7170200       lui a5, 0x21
|           0x00010174      1385874f       addi a0, a5, 1272           ; const char *format
|           0x00010178      ef00c01f       jal ra, sym.printf
|           0x0001017c      930784fe       addi a5, s0, -24
|           0x00010180      93850700       mv a1, a5
|           0x00010184      b7170200       lui a5, 0x21
|           0x00010188      13850751       addi a0, a5, 1296           ; const char *format
|           0x0001018c      ef00402f       jal ra, sym.scanf
|           0x00010190      032784fe       lw a4, -24(s0)
|           0x00010194      8327c4fe       lw a5, -20(s0)
|       ,=< 0x00010198      631cf700       bne a4, a5, 0x101b0
|       |   0x0001019c      b7170200       lui a5, 0x21
|       |   0x000101a0      13858751       addi a0, a5, 1304           ; const char *s
|       |   0x000101a4      ef00002d       jal ra, sym.puts
|       |   0x000101a8      93070000       li a5, 0
|       |   0x000101ac      6f000003       j 0x101dc
|       |   ; CODE XREF from main @ 0x10198
|       `-> 0x000101b0      032784fe       lw a4, -24(s0)
|           0x000101b4      8327c4fe       lw a5, -20(s0)
|       ,=< 0x000101b8      635af700       ble a5, a4, 0x101cc
|       |   0x000101bc      b7170200       lui a5, 0x21
|       |   0x000101c0      13858752       addi a0, a5, 1320           ; const char *s
|       |   0x000101c4      ef00002b       jal ra, sym.puts
|       |   0x000101c8      6ff09ffa       j 0x10170
|       |   ; CODE XREF from main @ 0x101b8
|       `-> 0x000101cc      b7170200       lui a5, 0x21
|           0x000101d0      13858753       addi a0, a5, 1336           ; const char *s
|           0x000101d4      ef00002a       jal ra, sym.puts
\           0x000101d8      6ff09ff9       j 0x10170
EOF
RUN
